package com.vispractice.fmc.webservice.processsrv.sb_wf_startprocesssrv;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

import com.vispractice.fmc.webservice.support.SimulateHelper;

import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.12
 * 2017-09-07T14:04:24.659+08:00
 * Generated source version: 3.1.12
 * 
 */
@WebServiceClient(name = "SBWFStartProcessSrvService", 
                  wsdlLocation = "http://10.204.115.52:8080/ws/sbWFStartProcessSrv/sbWFStartProcessSrv.wsdl",
                  targetNamespace = "http://csb.fmc.vispractice.com/SB_WF_StartProcessSrv") 
public class SBWFStartProcessSrvService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://csb.fmc.vispractice.com/SB_WF_StartProcessSrv", "SBWFStartProcessSrvService");
    public final static QName SBWFStartProcessSrvSoap11 = new QName("http://csb.fmc.vispractice.com/SB_WF_StartProcessSrv", "SBWFStartProcessSrvSoap11");
    static {
        URL url = null;
        try {
            url = new URL(SimulateHelper.getURI()+"/ws/sbWFStartProcessSrv/sbWFStartProcessSrv.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(SBWFStartProcessSrvService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://10.204.115.52:8080/ws/sbWFStartProcessSrv/sbWFStartProcessSrv.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public SBWFStartProcessSrvService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SBWFStartProcessSrvService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SBWFStartProcessSrvService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public SBWFStartProcessSrvService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public SBWFStartProcessSrvService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public SBWFStartProcessSrvService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns SBWFStartProcessSrv
     */
    @WebEndpoint(name = "SBWFStartProcessSrvSoap11")
    public SBWFStartProcessSrv getSBWFStartProcessSrvSoap11() {
        return super.getPort(SBWFStartProcessSrvSoap11, SBWFStartProcessSrv.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SBWFStartProcessSrv
     */
    @WebEndpoint(name = "SBWFStartProcessSrvSoap11")
    public SBWFStartProcessSrv getSBWFStartProcessSrvSoap11(WebServiceFeature... features) {
        return super.getPort(SBWFStartProcessSrvSoap11, SBWFStartProcessSrv.class, features);
    }

}
