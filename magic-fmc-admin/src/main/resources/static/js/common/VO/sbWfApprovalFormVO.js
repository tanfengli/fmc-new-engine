define(["knockout"],function(ko){
	function WfApprovalForm(options){
		var setting=$.extend({
			wfInstanceId:null,
			wfAuditedUserId:null,
			wfAuditedUserNo:null,
			wfAuditedUserName:null,
			currentPosts:null,
			postCode:null,
			wfResult:"101",
			wfOptionCon:null,
			fdHandleNodeId:null,
			currWorkItems:null,
			fdHandleWorkItemId:null,
			fdRelationWorkitemId:null,
			futureNodeId:null,
			futureHandlerIds:null,
			futureHandlerNos:null,
			futureHandlerNames:null,
			futureHandlerSelectType:null,
			wfTransferUserNo:null,
			toOtherHandlerIds:null,
			toOtherHandlerNos:null,
			toOtherHandlerNames:null,
			toOldHandlerNames:null,
			sourceOperType:null,
			refusePassedToThisNode:false,
			oprNames:null,
			notifyType:[],
			notifyOnFinish:true,
			commicateHandlerIds:null,
			commicateHandlerNos:null,
			commicateHandlerNames:null,
			isHiddenAuditNote:false,
			isMutiCommunicate:false,
			communicateScopeHandlerIds:null,
			communicateScopeHandlerNames:null,
			communicaterList:null,
			celCommunicaterList:null,
			sysNewsMain:null,
			isRecoverPassedSubprocess:false,
			recoverProcessIds:null,
			recoverProcessNames:null,
			flowChartXml:null,
			clickType:null,
		},options||{})
			
		return {
			wfInstanceId:setting.wfInstanceId,
			wfAuditedUserId:ko.observable(setting.wfAuditedUserId),
			wfAuditedUserNo:ko.observable(setting.wfAuditedUserNo),
			wfAuditedUserName:ko.observable(setting.wfAuditedUserName),
			currentPosts:ko.observableArray(setting.currentPosts),
			postCode:ko.observable(setting.postCode),
			wfResult:ko.observable(setting.wfResult),
			wfOptionCon:ko.observable(setting.wfOptionCon),
			fdHandleNodeId:ko.observable(setting.fdHandleNodeId),
			currWorkItems:ko.observableArray(setting.currWorkItems),
			fdHandleWorkItemId:ko.observable(setting.fdHandleWorkItemId),
			fdRelationWorkitemId:ko.observable(setting.fdRelationWorkitemId),
			futureNodeId:ko.observable(setting.futureNodeId),
			futureHandlerIds:ko.observable(setting.futureHandlerIds),
			futureHandlerNos:ko.observable(setting.futureHandlerNos),
			futureHandlerNames:ko.observable(setting.futureHandlerNames),
			futureHandlerSelectType:ko.observable(setting.futureHandlerSelectType),
			wfTransferUserNo:ko.observable(setting.wfTransferUserNo),
			toOtherHandlerIds:ko.observable(setting.toOtherHandlerIds),
			toOtherHandlerNos:ko.observable(setting.toOtherHandlerNos),
			toOtherHandlerNames:ko.observable(setting.toOtherHandlerNames),
			toOldHandlerNames:ko.observable(setting.toOldHandlerNames),
			sourceOperType:ko.observable(setting.sourceOperType),
			refusePassedToThisNode:ko.observable(setting.refusePassedToThisNode),
			oprNames:ko.observableArray(setting.oprNames),
			notifyType:ko.observableArray(setting.notifyType),
			notifyOnFinish:ko.observable(setting.notifyOnFinish),
			commicateHandlerIds:ko.observable(setting.commicateHandlerIds),
			commicateHandlerNos:ko.observable(setting.commicateHandlerNos),
			commicateHandlerNames:ko.observable(setting.commicateHandlerNames),
			isHiddenAuditNote:ko.observable(setting.isHiddenAuditNote),
			isMutiCommunicate:ko.observable(setting.isMutiCommunicate),
			communicateScopeHandlerIds:ko.observable(setting.communicateScopeHandlerIds),
			communicateScopeHandlerNames:ko.observable(setting.communicateScopeHandlerNames),
			communicaterList:ko.observableArray(setting.communicaterList),
			celCommunicaterList:ko.observableArray(setting.celCommunicaterList),
			sysNewsMain:ko.observable(setting.sysNewsMain),
			isRecoverPassedSubprocess:ko.observable(setting.isRecoverPassedSubprocess),
			recoverProcessIds:ko.observable(setting.recoverProcessIds),
			recoverProcessNames:ko.observable(setting.recoverProcessNames),
			flowChartXml:ko.observable(setting.flowChartXml),
			clickType:setting.clickType
		};
	};
	
	return WfApprovalForm;
})